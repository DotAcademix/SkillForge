@page "/Account"
@rendermode RenderMode.InteractiveServer

@using Microsoft.AspNetCore.Identity
@using SkillForge.Data
@using SkillForge.Data.Entities
@using System.Security.Claims
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Account</PageTitle>

<style>
    main {
        grid-area: main;
    }

    h3 {
        border-bottom: 2px solid;
        margin-bottom: 1em;
    }

    h1 {
        border-bottom: 2px solid;
        margin-bottom: 2rem;
    }

    .section .menu1 {
        width: 210px;
        justify-content: flex-end;
        background: #fefefe;
        border-right: 2px solid;
    }

    .section .container .menu2 {
        padding: min(3em, 4%);
    }

    .prf-link {
        background: transparent;
        border: none;
        color: black;
        padding: 8px 15px;
        text-decoration: none;
        transition: background 0.3s ease, color 0.3s ease;
        width: 100%;
    }

        .prf-link:hover,
        .prf-link:focus {
            background: linear-gradient(to right, #3da4dc, var(--mainColor));
            color: white;
            border-radius: 0.5rem;
        }

        .prf-link::after {
            border: none;
        }

</style>

<main>
    <h2>My Profile</h2>
    <div class="row">
        <div class="col-lg-6">
            <section class="menu1">
                <NavLink class="prf-link" href="/Account">
                    <span class="bi bi-house-door-fill" aria-hidden="true"></span> Profile
                </NavLink>
                <NavLink class="prf-link" href="Account/MyCourses">
                    <span class="bi bi-house-door-fill" aria-hidden="true"></span> My Courses
                </NavLink>
                <NavLink class="nav-link" href="Account/Manage/TwoFactorAuthentication">
                    <span class="bi bi-house-door-fill" aria-hidden="true"></span> Two-factor authentication
                </NavLink>
            </section>
        </div>

        <div class="col-lg-6">
            <section class="menu2">
                <h3>Account Details</h3>
                @if (CurrentUser != null)
                {
                    <p><strong>First Name:</strong> @CurrentUser.FirstName</p>
                    <p><strong>Last Name:</strong> @CurrentUser.LastName</p>
                    <p><strong>Email:</strong> @CurrentUser.Email</p>
                    <p><strong>Role:</strong> @(UserRoles.Any() ? string.Join(", ", UserRoles) : "No Role Assigned")</p>
                }
                else
                {
                    <p>Loading user details...</p>
                }
            </section>
        </div>
    </div>
</main>

@code {
    private ApplicationUser? CurrentUser;
    private List<string> UserRoles = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            string? userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                CurrentUser = await UserManager.FindByIdAsync(userId);
                if (CurrentUser != null)
                {
                    UserRoles = (await UserManager.GetRolesAsync(CurrentUser)).ToList();
                }
            }
        }
    }
}
