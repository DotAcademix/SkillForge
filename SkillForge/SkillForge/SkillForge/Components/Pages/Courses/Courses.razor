@page "/courses"
@rendermode RenderMode.InteractiveServer

@using SkillForge.Core.Services.Abstraction
@using SkillForge.Data.Entities
@using SkillForge.Models.Courses

@inject ICourseService CourseService
@inject NavigationManager NavManager

<h2 class="text-3xl font-bold mb-6 text-center">Available Courses</h2>

@if (courses == null)
{
    <p class="text-center text-gray-500">Loading courses...</p>
}
else if (courses.Count == 0)
{
    <p class="text-center text-gray-500">No courses available.</p>
}
else
{
    <MudGrid Spacing="6" Justify="Justify.Center">
        @foreach (var course in courses)
        {
            string localId = course.Id;
            <MudItem>
                <MudPaper Class="d-flex flex-column align-center py-8"
                          Style="border: 5px solid transparent;
                         border-image: linear-gradient(to right, #3da4dc, var(--mainColor)) 1;"
                          Height="200px" Width="370px">
                    <MudText Typo="Typo.h3">@course.Name</MudText>
                    @* <MudText Typo="Typo.body1">@course.Description</MudText> *@
                    <MudButton Style="height: 100px; margin-top: 30px; font-size: 20px"
                               Variant="Variant.Filled" 
                               Color="Color.Primary"
                               @onclick="async () => await OpenCourse(localId)">
                        View Course
                    </MudButton>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
}

@code {
    CancellationToken cancellationToken;
    private List<SkillForge.Data.Entities.Course> courses;

    protected override async Task OnInitializedAsync()
    {
        var coursesResult = await CourseService.GetAllAsync(cancellationToken);
        courses = coursesResult.ToList();
    }

    private async Task OpenCourse(string courseId)
    {
        NavManager.NavigateTo($"/course/{courseId}");
    }

}
