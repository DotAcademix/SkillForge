@page "/Courses"

@using SkillForge.Core.Services.Abstraction
@using SkillForge.Data.Entities
@using SkillForge.Models.Courses

@inject ICourseService courseService
@inject NavigationManager NavManager

<h2 class="text-3xl font-bold mb-6 text-center">Available Courses</h2>

@if (courses == null)
{
    <p class="text-center text-gray-500">Loading courses...</p>
}
else if (courses.Count == 0)
{
    <p class="text-center text-gray-500">No courses available.</p>
}
else
{
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var course in courses)
        {
            <div class="bg-white rounded-2xl shadow-lg hover:shadow-xl transition p-6 cursor-pointer"
                 @onclick="() => OpenCourse(course.Id)">
                <h3 class="text-xl font-semibold text-gray-800">@course.Name</h3>
                <p class="text-gray-600 mt-2 line-clamp-3">@course.Description</p>
                <div class="mt-4">
                    <button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        View Course
                    </button>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<CoursesViewModel> courses = new();

    protected override async Task OnInitializedAsync()
    {
        courses = await courseService.GetAllAsync();
    }

    private void OpenCourse(int courseId)
    {
        NavManager.NavigateTo($"/course/{courseId}");
    }
}
