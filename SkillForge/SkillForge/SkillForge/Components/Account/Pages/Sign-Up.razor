@page "/Account/Register"

<style>
    body {
        background: linear-gradient(to right, #3da4dc, var(--mainColor));
    }

    .@sidebarClass {
        display: none;
    }
</style>

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Forms
@using SkillForge.Components.Account
@using SkillForge.Data

@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore
@inject SignInManager<ApplicationUser> SignInManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject ILogger<Sign_Up> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Sign-Up</PageTitle>

<div class="wrapper">
    <div class="form-container sign-up">
    </div>
    <div class="form-container">
        <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="RegisterUser" FormName="register">
            <DataAnnotationsValidator />
            <h2>Sign Up</h2>

             <div class="form-group">
                <InputText @bind-Value="Input.FirstName" 
                style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="FirstName" aria-required="true" placeholder="FirstName" />
                <i class="fas fa-user"></i>
                <ValidationMessage For="@(() => Input.FirstName)" class="text-danger" />
            </div>
            <div class="form-group">
                <InputText @bind-Value="Input.LastName"
                           style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="LastName" aria-required="true" placeholder="LastName" />
                <i class="fas fa-user"></i>
                <ValidationMessage For="@(() => Input.LastName)" class="text-danger" />
            </div>

            <div class="form-group">
                <InputText @bind-Value="Input.Email" style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="email" aria-required="true" placeholder="Email" />
                <i class="fas fa-at"></i>
                <ValidationMessage For="@(() => Input.Email)" class="text-danger" />
            </div>

            <div class="form-group">
                <InputText type="password" @bind-Value="Input.Password" style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Password" />
                <i class="fas fa-lock"></i>
                <ValidationMessage For="@(() => Input.Password)" class="text-danger" />
            </div>

            <div class="form-group">
                <InputText type="password" @bind-Value="Input.ConfirmPassword" style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Confirm Password" />
                <i class="fas fa-lock"></i>
                <ValidationMessage For="@(() => Input.ConfirmPassword)" class="text-danger" />
            </div>
            <div class="form-group">
                <InputSelect @bind-Value="Input.Role" id="Input.Role" style="width: 104%;
                height: 2.75rem;
                padding: 0 1rem;
                border-radius: .5rem;
                border: none;
                outline: none;
                border: .1rem solid var(--labelColor);
                font-size: 1.3rem;
                color: var(--labelColor);
                background: transparent;" class="form-control" autocomplete="role" aria-required="true" placeholder="Role" >
                    <option value="Student">Student</option>
                    <option value="Instructor">Instructor</option>
                </InputSelect>
                <i class="fas fa-lock"></i>
                <ValidationMessage For="() => Input.Role" class="text-danger" />
            </div>

            <button type="submit" class="btn">Sign Up</button>

            <div class="link">
                <p>Already have an account? <a href="/Account/Login" class="signin-link">Sign In</a></p>
            </div>

            @if (identityErrors is not null && identityErrors.Any())
            {
                <div class="text-danger">
                    @foreach (var error in identityErrors)
                    {
                        <p>@error.Description</p>
                    }
                </div>
            }
        </EditForm>
    </div>
</div>